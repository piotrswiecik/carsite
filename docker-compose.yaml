services:
  postgres:
    image: postgres:16-bookworm
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=auctions
    ports:
      - "5432:5432"
    volumes:
      - cars-data:/var/lib/postgresql/data
    networks:
      custom:
  
  mongo:
    image: mongo:7-jammy
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - "27017:27017"
    volumes:
      - cars-mongo-data:/var/lib/mongodb/data
    networks:
      custom:
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      custom:
        
  auction-svc:
    image: capricornpl/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=auctions;
      - IdentityService__Authority=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - "8000:80"
      - "7777:7777"
    depends_on:
      - postgres
      - rabbitmq
      - identity-svc
    networks:
      custom:
  
  search-svc:
    image: capricornpl/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDb=mongodb://root:password@mongo:27017
      - IdentityService__Authority=http://identity-svc
    ports:
      - "8001:80"
    depends_on:
      - auction-svc
      - mongo
      - rabbitmq
      - identity-svc
    networks:
      custom:
  
  identity-svc:
    image: capricornpl/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=identity;
      - VIRTUAL_HOST=id.carsite.com
      - ClientApp=https://app.carsite.com # redirect url config
    depends_on:
      - postgres
    networks:
      custom:
        ipv4_address: 10.5.0.200
  
  gateway-svc:
    image: capricornpl/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - VIRTUAL_HOST=api.carsite.com
      - ClientApp=https://app.carsite.com  # CORS
    networks:
      custom:
        
  bid-svc:
    image: capricornpl/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BidDb=mongodb://root:password@mongo:27017
      - IdentityService__Authority=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - "8002:80"
    depends_on:
      - auction-svc
      - mongo
      - rabbitmq
      - identity-svc
    networks:
      custom:
  
  nt-svc:
    image: capricornpl/nt-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - "8003:80"
    depends_on:
      - mongo
      - rabbitmq
    networks:
      custom:
        
  web-app:
    image: capricornpl/web-app:latest
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data # nextjs uses this for caching
    extra_hosts:
      - id.carsite.com:10.5.0.200  # nasty hack!
    environment:
      - NEXTAUTH_SECRET=your_secret
      - NEXTAUTH_URL=http://app.carsite.com  # careful about this one!
      - NEXTAUTH_URL_INTERNAL=http://web-app:3000
      - API_URL=http://gateway-svc
      - ID_URL=http://id.carsite.com  # nasty hack + /etc/hosts
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc/notifications
      - VIRTUAL_HOST=app.carsite.com
      - VIRTUAL_PORT=3000
    networks:
      custom:
        
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    networks:
        custom:
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs

volumes:
  cars-data:
  cars-mongo-data:
    
networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16