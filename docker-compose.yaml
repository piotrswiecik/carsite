services:
  postgres:
    image: postgres:16-bookworm
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=auctions
    ports:
      - "5432:5432"
    volumes:
      - cars-data:/var/lib/postgresql/data
  
  mongo:
    image: mongo:7-jammy
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - "27017:27017"
    volumes:
      - cars-mongo-data:/var/lib/mongodb/data
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
        
  auction-svc:
    image: capricornpl/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=auctions;
      - IdentityService__Authority=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - "8000:80"
      - "7777:7777"
    depends_on:
      - postgres
      - rabbitmq
      - identity-svc
  
  search-svc:
    image: capricornpl/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDb=mongodb://root:password@mongo:27017
      - IdentityService__Authority=http://identity-svc
    ports:
      - "8001:80"
    depends_on:
      - auction-svc
      - mongo
      - rabbitmq
      - identity-svc
  
  identity-svc:
    image: capricornpl/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=identity;
    ports:
      - "5000:80"
    depends_on:
      - postgres
  
  gateway-svc:
    image: capricornpl/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6001:80"
        
  bid-svc:
    image: capricornpl/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BidDb=mongodb://root:password@mongo:27017
      - IdentityService__Authority=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - "8002:80"
    depends_on:
      - auction-svc
      - mongo
      - rabbitmq
      - identity-svc
  
  nt-svc:
    image: capricornpl/nt-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - "8003:80"
    depends_on:
      - mongo
      - rabbitmq
        
  web-app:
    image: capricornpl/web-app:latest
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data # nextjs uses this for caching
    ports:
      - "3000:3000"
    environment:
      - NEXTAUTH_SECRET=your_secret
      - NEXTAUTH_URL=http://web-app:3000  # careful about this one!
      - API_URL=http://gateway-svc:6001
      - ID_URL=http://identity-svc:5000
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc:6001/notifications

volumes:
  cars-data:
  cars-mongo-data: